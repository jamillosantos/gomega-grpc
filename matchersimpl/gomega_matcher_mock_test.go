// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/onsi/gomega/types (interfaces: GomegaMatcher)

// Package matchersimpl is a generated GoMock package.
package matchersimpl

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGomegaMatcher is a mock of GomegaMatcher interface.
type MockGomegaMatcher struct {
	ctrl     *gomock.Controller
	recorder *MockGomegaMatcherMockRecorder
}

// MockGomegaMatcherMockRecorder is the mock recorder for MockGomegaMatcher.
type MockGomegaMatcherMockRecorder struct {
	mock *MockGomegaMatcher
}

// NewMockGomegaMatcher creates a new mock instance.
func NewMockGomegaMatcher(ctrl *gomock.Controller) *MockGomegaMatcher {
	mock := &MockGomegaMatcher{ctrl: ctrl}
	mock.recorder = &MockGomegaMatcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGomegaMatcher) EXPECT() *MockGomegaMatcherMockRecorder {
	return m.recorder
}

// FailureMessage mocks base method.
func (m *MockGomegaMatcher) FailureMessage(arg0 interface{}) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FailureMessage", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// FailureMessage indicates an expected call of FailureMessage.
func (mr *MockGomegaMatcherMockRecorder) FailureMessage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FailureMessage", reflect.TypeOf((*MockGomegaMatcher)(nil).FailureMessage), arg0)
}

// Match mocks base method.
func (m *MockGomegaMatcher) Match(arg0 interface{}) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Match", arg0)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Match indicates an expected call of Match.
func (mr *MockGomegaMatcherMockRecorder) Match(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Match", reflect.TypeOf((*MockGomegaMatcher)(nil).Match), arg0)
}

// NegatedFailureMessage mocks base method.
func (m *MockGomegaMatcher) NegatedFailureMessage(arg0 interface{}) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NegatedFailureMessage", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// NegatedFailureMessage indicates an expected call of NegatedFailureMessage.
func (mr *MockGomegaMatcherMockRecorder) NegatedFailureMessage(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NegatedFailureMessage", reflect.TypeOf((*MockGomegaMatcher)(nil).NegatedFailureMessage), arg0)
}
